{"version":3,"sources":["GlobalStyles.js","components/Header/Header.styles.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/index.js","config.js","API.js","components/HeroImage/HeroImage.style.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thubnails/Thumb.styles.js","components/Thubnails/index.js","components/Spinner/Spinner.styles.js","components/Spinner/index.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","Hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","Content","TMDBLogoImg","img","LogoImg","Header","src","TMDBLogo","ReactMovieLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","props","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","alt","Spinner","Spin","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","event","currentTarget","button","Button","callback","onClick","initialState","results","total_pages","total_results","useHomeFetch","loading","setLoading","error","setError","loadMore","setLoadMore","API","movies","prev","setInterval","window","innerHeight","scrollY","document","offsetHeight","console","log","Home","backdrop_path","original_title","overview","map","movie","poster_path","noImage","id","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e42eb15b.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --maxWidth: 1280px; \r\n    --white: #fff;\r\n    --lightGrey: #eee;\r\n    --medGrey: #353535; \r\n    --darkGrey: #1c1c1c;\r\n    --fontSuperBig: 2.5rem;\r\n    --fontBig: 1.5rem;\r\n    --fontMed: 1.2rem;\r\n    --fontSmall: 1rem;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Abel', sans-serif;  \r\n  }\r\n\r\n  body {  \r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n\r\n    h1 {\r\n      font-size: 2rem;\r\n      font-weight: 600;\r\n      color: var(--white);\r\n    }\r\n\r\n    h3 {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n    }\r\n\r\n    p {\r\n      font-size: 1rem;\r\n      color: var(--white);\r\n    }\r\n  }\r\n`;\r\n","import styled, { StyledComponent } from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.div `\r\n\r\nbackground: var(--darkGrey);\r\npadding: 0 20px;\r\n\r\n`\r\n\r\nexport const Content = styled.div `\r\n\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\nmax-width: var(--maxWidth);\r\npadding: 20px 0;\r\nmargin: 0 auto;\r\n`\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n\r\nwidth: 100px;\r\n\r\n@media screen and (max-width: 500px) {\r\n\r\n    width: 80px;\r\n}\r\n\r\n`\r\n\r\nexport const LogoImg = styled.img`\r\n\r\nwidth: 200px;\r\n\r\n@media screen and (max-width: 500px) {\r\n    width: 150px;\r\n}\r\n\r\n`","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import React from \"react\";\r\nimport { Wrapper, Content, TMDBLogoImg, LogoImg } from \"./Header.styles\";\r\nimport ReactMovieLogo from \"../../images/react-movie-logo.svg\";\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n        <Wrapper>\r\n            <Content>\r\n                <TMDBLogoImg src = {TMDBLogo}/>\r\n                <LogoImg src = {ReactMovieLogo}/>\r\n            </Content>\r\n        </Wrapper>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"c2eb28ba3a5605ba2debd9fa356e6bb2\";\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${(props) =>\r\n    `linear-gradient(\r\n      to bottom, rgba(0,0,0,0)\r\n      39%,rgba(0,0,0,0)\r\n      41%,rgba(0,0,0,0.65)\r\n      100%\r\n    ),\r\n    url('${props.image}'), var(--darkGrey)`};\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroimage 1s;\r\n\r\n  @keyframes animateHeroimage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n\r\n  p {\r\n    font-size: var(--fontMed);\r\n  \r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;","import React from \"react\";\r\n\r\nimport { Wrapper, Content, Text } from './HeroImage.style'\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n    return (\r\n        <Wrapper image = {image}>\r\n            <Content>\r\n                <Text>\r\n                    <h1>{title}</h1>\r\n                    <p>{text}</p>\r\n                </Text>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n}\r\n \r\nexport default HeroImage;","import styled from \"styled-components\"\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  h1 {\r\n    color: var(--medGrey);\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\r\ndisplay: grid;\r\ngrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\ngrid-gap: 2rem;\r\n\r\n`","import React from \"react\";\r\n\r\nimport {Wrapper, Content} from \"./Grid.styles\"\r\n\r\n\r\n\r\nconst Grid = ({ header, children }) => {\r\n    return (\r\n        <Wrapper>\r\n            <h1>{header}</h1>\r\n            <Content>\r\n                {children}\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n}\r\n \r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\nwidth: 100%;\r\nmax-width: 720px;\r\ntransition: all 0.3s;\r\nobject-fit: cover;\r\nborder-radius: 20px;\r\nanimation: animateThumb 0.5s;\r\n\r\n\r\n@keyframes animateThumb {\r\n    \r\n    from{\r\n        opacity: 0;\r\n    }\r\n\r\n    to{\r\n        opacity: 1;\r\n    }\r\n\r\n\r\n}\r\n\r\n:hover {\r\n    opacity: 0.8;\r\n}\r\n\r\n`;","import React from \"react\";\r\nimport { Image } from \"./Thumb.styles\";\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => {\r\n    return (\r\n        <div>\r\n            <Image src = {image} alt = \"movie thumb\"/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Thumb;","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\nborder: 5px solid var(--lightGrey);\r\nborder-top: 5px solid var(--medGrey);\r\nborder-radius: 50%;\r\nwidth: 50px;\r\nheight: 50px;\r\nanimation: spin 0.8s linear infinite;\r\nmargin: 20px auto;\r\n\r\n@keyframes spin {\r\n    from{\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    to{\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n`","import React from \"react\";\r\nimport { Spinner } from \"./Spinner.styles\";\r\n\r\nconst Spin = () => {\r\n    return (\r\n        <>\r\n        <Spinner/>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Spin;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  height: 55px;\r\n  background: var(--medGrey);\r\n  margin: 0 auto;\r\n  border-radius: 40px;\r\n  color: var(--white);\r\n\r\n  img {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 14px;\r\n    width: 30px;\r\n  }\r\n\r\n  input {\r\n    font-size: 28px;\r\n    position: absolute;\r\n    left: 0px;\r\n    margin: 8px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n`;","import React, {useState, useEffect, useRef} from \"react\";\r\n\r\n\r\nimport searchIcon from \"../../images/search-icon.svg\"\r\n\r\n\r\nimport {Wrapper, Content} from \"./SearchBar.styles\"\r\n\r\nconst SearchBar = ({setSearchTerm}) => {\r\n    const [state, setState] = useState(\"\");\r\n    const initial = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (initial.current) {\r\n            initial.current = false;\r\n            return\r\n        }\r\n        const timer = setTimeout(() => {\r\n            setSearchTerm(state)\r\n        }, 500)\r\n        return () => clearTimeout (timer)\r\n    }, [setSearchTerm, state])\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <img src = {searchIcon} alt = \"search-icon\"/>\r\n                <input type = \"text\" placeholder = \"Look up a movie\" type = \"text\" \r\n                onChange = {event => setState(event.currentTarget.value)} value = {state}/>\r\n                \r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n}\r\n \r\nexport default SearchBar;","import styled from \"styled-components\";\r\n\r\n\r\nexport const Wrapper = styled.button`\r\ndisplay: block;\r\nbackground: var(--darkGrey);\r\nwidth: 25%;\r\nmin-width: 200px;\r\ncursor: pointer;\r\nheight: 60px;\r\nborder-radius: 30px;\r\ncolor: var(--white);\r\nborder: none;\r\nfont-size: var(--fontBig);\r\nmargin: 20px auto;\r\ntransition: all 0.3s;\r\n\r\n:hover{\r\n    opacity: 0.8;\r\n}\r\n\r\n\r\n`\r\n","import React from \"react\";\r\nimport {Wrapper} from './Button.styles'\r\n\r\nconst Button = ({text, callback}) => {\r\n    return ( \r\n        <Wrapper type = \"button\" onClick = {callback}>\r\n            {text}\r\n        </Wrapper>\r\n     );\r\n}\r\n \r\nexport default Button;","import { useState, useEffect, useRef } from \"react\";\r\n\r\nimport API from \"../API\"\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0\r\n}\r\n\r\n\r\nconst useHomeFetch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [state, setState] = useState(initialState)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [loadMore, setLoadMore] =useState(false)\r\n\r\n\r\n    const fetchMovies = async (page, searchTerm) => {\r\n\r\n        try{\r\n\r\n            setLoading(true)\r\n            setError(false)\r\n            const movies = await API.fetchMovies(searchTerm, page)\r\n\r\n            setState(prev => ({\r\n                ...movies, \r\n                results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }));\r\n\r\n            \r\n        }\r\n\r\n        catch (error) {\r\n\r\n            \r\n            setError(true)\r\n\r\n        }\r\n        \r\n        setLoading(false)\r\n    }\r\n\r\nsetInterval(() => {\r\n    if(window.innerHeight + window.scrollY >= document.body.offsetHeight){\r\n        setLoadMore(true)\r\n    }\r\n}, 1000)\r\n\r\n    useEffect(() => {\r\n        if(!loadMore){return}\r\n\r\n        fetchMovies(state.page + 1)\r\n        \r\n        setLoadMore(false)\r\n    }, [loadMore])\r\n    \r\n    useEffect(() => {\r\n\r\n        fetchMovies( 1, searchTerm)\r\n        \r\n        \r\n    }, [searchTerm])\r\n\r\nconsole.log(state)\r\n    return { state, loading, error, searchTerm, setSearchTerm };\r\n}\r\n \r\nexport default useHomeFetch;","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React, { useState, useEffect} from \"react\";\r\n\r\n\r\n\r\n//Config\r\nimport API from \"../API\"\r\n\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\r\n\r\n//Components\r\nimport HeroImage from \"./HeroImage\";\r\nimport Grid from \"./Grid/index\"\r\nimport Thumb from \"./Thubnails\";\r\nimport Spin from \"./Spinner\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Button from \"./Button\";\r\n\r\n//Hook\r\nimport useHomeFetch from \"../Hooks/useHomeFetch\";\r\n\r\n//Image\r\nimport noImage from \"../images/no_image.jpg\"\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const {state, loading, error, searchTerm, setSearchTerm} = useHomeFetch()\r\n    return (\r\n\r\n        <>\r\n        {state.results[0] && !searchTerm ? \r\n        <HeroImage\r\n\r\n        image = {`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n        title = {state.results[0].original_title}\r\n        text = {state.results[0].overview}\r\n        /> : null}\r\n\r\n        <SearchBar setSearchTerm = {setSearchTerm}/>\r\n\r\n        <Grid header = {searchTerm? \"Results\" : \"Popular Movies\"}>\r\n            {state.results.map( movie => (\r\n                <Thumb\r\n                key = {movie.id}\r\n                clickable\r\n                image = {\r\n                    movie.poster_path? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path : noImage\r\n                }\r\n                movieId = {movie.id}\r\n                />\r\n            ))}\r\n        </Grid>\r\n        { loading? <Spin/>: null}\r\n        {state.page < state.total_pages && !loading ? <Button text =\"Load More\"/> : null }\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Home;","import React from 'react';\nimport { GlobalStyle } from './GlobalStyles';\nimport Header from './components/Header';\nimport Home from \"./components/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home/>\n      <GlobalStyle/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}